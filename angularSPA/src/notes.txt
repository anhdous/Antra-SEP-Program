Angular is by Google, React is by Facebook, Vue is by independent company
AngularJS was initial version of Angular, then Angular 2 came out in 20
React is more popular overall, but Angular is more popular with .NET Teams/
New version of Angular came out every 6 months
Angular garentees long term support for a minimum of 18 months per release

Similarities between C# and Angular:
Controller      Component
Views           templates
Attributes      Decorators
Services        Services
DI              DI
Routing         Routing
Filters         Route Guards
Middleware      Interceptor
C#              TypeScript          (Both invented by the same guy)


Always use CMD/Terminal instead of Powershell

Angular is based on Modules:
Application for Antra => HCM(Human Capitak Management)
Recruiting -> hire candidate, fire candidate, follow up with candidate, schedule
Sakes -> Vendor submitssion, follow up with Client, check interviews
Reporting -> Consultant list, active consultant list, place consultants 
Timesheet -> Create timesheet, approve timesheet, timesheet codes list
Authentication -> Login, register, forgot password, log out

All modules must be created inside the src folder

The component is the main building block of an Angular application . A component contains the defenition of the view and the data that defines how the views look and behaves. The Angular components are plain Javascript classes and defined using the component decorator

The component passes the data to the view using a process called data binding.

Angular Pipes are used to transform anf format data. For example the Date pipe formats date information according to the locate rule. We can 

an Angular decorator is a function which we use to attach metadata to a ckass .... We apply the decorator using the form @expression where expression is the name of the 

@compoent decorator which defines a class as an Angular component and attached the required method 

Angular will not recognize your class as an Angular component unless you de

@Injectabledecorator has two purposes:
Show Angular that this class needs a dependency, the Angular complier will 
Secondly, using the provideIn array we inform the dependency injection systen

@Directive decorator which marks a class as an Angular Directive. Angular 
@pipe decorator which marks the class as an Angular Pipe and supplies configuration 
@Input decorator marks the property as the input property. This means it can 

@Output decorator marks the property as the Output property. What this does 


